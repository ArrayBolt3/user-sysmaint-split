#!/bin/bash

## Copyright (C) 2024 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## Copyright (C) 2025 - 2025 Benjamin Grande M. S. <ben.grande.b@gmail.com>
## See the file COPYING for copying conditions.

set -o errexit
set -o nounset
set -o errtrace
set -o pipefail

echo "$0: INFO: START" >&2

error_handler() {
   local last_exit_code="$?"
   echo "\
###
$0: ERROR:
BASH_COMMAND: '$BASH_COMMAND'
failed with exit code '$last_exit_code'.
###" >&2
   exit "$last_exit_code"
}

trap error_handler ERR

exit_handler() {
   local exit_code="$?"
   echo "INFO: If installed, rads (Ram Adjusted Desktop Starter) should be starting, ok." >&2
   echo "INFO: (Because sysmaint-boot.target runs 'Before=rads.service' and 'Wants=rads.service'.)" >&2
   if [ "$exit_code" = "0" ]; then
      echo "$0: END: with OK exit code: '$exit_code'" >&2
   else
      echo "$0: END: with ERROR exit code: '$exit_code'" >&2
   fi
   exit "$exit_code"
}

trap exit_handler EXIT

user_sysmaint_split_config_dir='/etc/user-sysmaint-split.conf.d'
kernel_cmdline="$(cat -- /proc/cmdline)"
default_display_manager="$(basename "$(cat -- /etc/X11/default-display-manager)")"
sysmaint_session_wayland='no'
sysmaint_autologin='no'
lightdm_state_dir='/var/lib/lightdm/.cache/lightdm-gtk-greeter'
lightdm_state_file="${lightdm_state_dir}/state"
lightdm_state_backup_file="${lightdm_state_file}.sysmaint-boot"
sddm_state_dir='/var/lib/sddm'
sddm_state_file="${sddm_state_dir}/state.conf"
sddm_state_backup_file="${sddm_state_file}.sysmaint-boot"

sysmaint_account_already_locked=no
if accountctl sysmaint is-pass-locked; then
   sysmaint_account_already_locked=yes
fi

lock_sysmaint_account() {
   echo "INFO: sysmaint_account_already_locked: '$sysmaint_account_already_locked'" >&2
   if [ "$sysmaint_account_already_locked" = "no" ]; then
      echo "INFO: Therefore, locking account 'sysmaint' (and deleting auto generated sysmaint login manager configuration files)." >&2
      accountctl sysmaint lock-pass
   fi
}

restore_pre_sysmaint_autologin_config() {
   safe-rm -f -- '/etc/lightdm/lightdm.conf.d/60_sysmaint-boot.conf'
   safe-rm -f -- '/etc/sddm.conf.d/z-sysmaint-boot.conf'
   if [ -f "${lightdm_state_backup_file}" ]; then
      safe-rm -rf -- "${lightdm_state_file}"
      mv --verbose -- "${lightdm_state_backup_file}" "${lightdm_state_file}"
   fi
   if [ -f "${sddm_state_backup_file}" ]; then
      safe-rm -rf -- "${sddm_state_file}"
      mv --verbose -- "${sddm_state_backup_file}" "${sddm_state_file}"
   fi
}

write_lightdm_enable_autologin_config() {
   if [ "${sysmaint_session_wayland}" = 'yes' ]; then
      echo "[Seat:*]
autologin-user=sysmaint
autologin-session=sysmaint-session-wayland" \
         | sponge -- '/etc/lightdm/lightdm.conf.d/60_sysmaint-boot.conf'
   else
      echo "[Seat:*]
autologin-user=sysmaint
autologin-session=sysmaint-session" \
         | sponge -- '/etc/lightdm/lightdm.conf.d/60_sysmaint-boot.conf'
   fi
}

write_lightdm_disable_autologin_config() {
   echo "[Seat:*]
autologin-user=" \
      | sponge -- '/etc/lightdm/lightdm.conf.d/60_sysmaint-boot.conf'
}

write_lightdm_sysmaint_default_session_config() {
   if [ -d '/home/sysmaint' ]; then
      if [ "${sysmaint_session_wayland}" = 'yes' ]; then
         echo "[Desktop]
Session=sysmaint-session-wayland" \
            | sponge -- '/home/sysmaint/.dmrc'
      else
         echo "[Desktop]
Session=sysmaint-session" \
            | sponge -- '/home/sysmaint/.dmrc'
      fi
      chown sysmaint:sysmaint -- '/home/sysmaint/.dmrc'
      echo "INFO: Created file: '/home/sysmaint/.dmrc'" >&2
   else
      echo "WARNING: Folder '/home/sysmaint' does not exist. Therefore, file '/home/sysmaint/.dmrc' has not been created." >&2
   fi

   if [ -f "${lightdm_state_backup_file}" ]; then
      return
   fi
   if [ -f "${lightdm_state_file}" ]; then
      safe-rm -rf -- "${lightdm_state_backup_file}"
      mv --verbose -- "${lightdm_state_file}" "${lightdm_state_backup_file}"
   fi

   if ! [ -d "${lightdm_state_dir}" ]; then
      safe-rm -rf -- "${lightdm_state_dir}"
      mkdir --verbose  --parents -- "${lightdm_state_dir}" || exit 1
   fi

   if [ "${sysmaint_session_wayland}" = 'yes' ]; then
      echo "[greeter]
last-user=sysmaint
last-session=sysmaint-session-wayland" \
         | sponge -- "${lightdm_state_file}"
   else
      echo "[greeter]
last-user=sysmaint
last-session=sysmaint-session" \
         | sponge -- "${lightdm_state_file}"
   fi
   echo "INFO: Created file: '${lightdm_state_file}'" >&2
}

write_sddm_enable_autologin_config() {
   # Typically files under /etc/sddm.conf.d are NOT prefixed with a number, for
   # instance KDE generates an /etc/sddm.conf.d/kde_settings.conf file, thus
   # to get this file to be loaded last we have to use a name that sorts last
   # in the alphabet without using a number prefix.
   if [ "${sysmaint_session_wayland}" = 'yes' ]; then
      echo "[Autologin]
User=sysmaint
Session=sysmaint-session-wayland.desktop" \
         | sponge -- '/etc/sddm.conf.d/z-sysmaint-boot.conf'
   else
      echo "[Autologin]
User=sysmaint
Session=sysmaint-session.desktop" \
         | sponge -- '/etc/sddm.conf.d/z-sysmaint-boot.conf'
   fi
}

write_sddm_disable_autologin_config() {
   echo "[Autologin]
User=
Session=" \
      | sponge -- '/etc/sddm.conf.d/z-sysmaint-boot.conf'
}

write_sddm_sysmaint_default_session_config() {
   if [ -f "${sddm_state_backup_file}" ]; then
      return
   fi
   if [ -f "${sddm_state_file}" ]; then
      safe-rm -rf -- "${sddm_state_backup_file}"
      mv --verbose -- "${sddm_state_file}" "${sddm_state_backup_file}"
   fi

   if ! [ -d "${sddm_state_dir}" ]; then
      safe-rm -rf -- "${sddm_state_dir}"
      mkdir --verbose --parents -- "${sddm_state_dir}" || exit 1
   fi

   if [ "${sysmaint_session_wayland}" = 'yes' ]; then
      echo "[Last]
User=sysmaint
Session=/usr/share/wayland-sessions/sysmaint-session-wayland.desktop" \
         | sponge -- "${sddm_state_file}"
   else
      echo "[Last]
User=sysmaint
Session=/usr/share/xsessions/sysmaint-session.desktop" \
         | sponge -- "${sddm_state_file}"
   fi
   echo "INFO: Created file: '/var/lib/sddm/state.conf'" >&2
}

handle_boot() {
   if ! [[ "${kernel_cmdline}" =~ 'boot-role=sysmaint' ]]; then
      echo "INFO: user mode boot detected. (Not sysmaint boot mode.)" >&2
      echo "INFO: (kernel parameter 'boot-role=sysmaint' is not present, ok.)" >&2
      lock_sysmaint_account
      restore_pre_sysmaint_autologin_config
      exit 0
   fi

   echo "INFO: sysmaint boot mode detected." >&2
   echo "INFO: (kernel parameter 'boot-role=sysmaint' present, ok.)" >&2

   ## Unlocking account 'sysmaint'.
   accountctl sysmaint unlock-pass

   if [ "${default_display_manager}" = 'lightdm' ]; then
      mkdir --verbose --parents -- '/etc/lightdm/lightdm.conf.d'

      if [ "${sysmaint_autologin}" = "yes" ]; then
         write_lightdm_enable_autologin_config
      else
         ## Prevent autologin in this instance, or the normal user account will
         ## end up logged in.
         write_lightdm_disable_autologin_config
      fi
      echo "INFO: Created file: '/etc/lightdm/lightdm.conf.d/60_sysmaint-boot.conf'" >&2

      write_lightdm_sysmaint_default_session_config
   elif [ "${default_display_manager}" = 'sddm' ]; then
      mkdir --verbose --parents -- '/etc/sddm.conf.d'

      if [ "${sysmaint_autologin}" = "yes" ]; then
         write_sddm_enable_autologin_config
      else
         ## Prevent autologin in this instance, or the normal user account will
         ## end up logged in
         write_sddm_disable_autologin_config
      fi
      echo "INFO: Created file: '/etc/sddm.conf.d/z-sysmaint-boot.conf'" >&2

      write_sddm_sysmaint_default_session_config
   fi

   ## Qubes handling.
   if [ ! -f /usr/share/qubes/marker-vm ]; then
      return
   fi
   echo "INFO: Qubes OS detected. Installing volatile qrexec overrides and QubesDB config for sysmaint account." >&2
   cp /usr/share/user-sysmaint-split/qubes/qubes-rpc/* /run/qubes-rpc/
   cp /usr/share/user-sysmaint-split/qubes/rpc-config/* /run/qubes/rpc-config/
   qubesdb-write /default-user sysmaint
}

parse_user_sysmaint_split_config() {
   local config_file line
   if [ -d "${user_sysmaint_split_config_dir}" ]; then
      for config_file in "${user_sysmaint_split_config_dir}"/*; do
         if [ ! -f "${config_file}" ]; then
            continue
         fi
         while read -r line; do
            case "${line}" in
               'sysmaint-autologin=yes')
                  sysmaint_autologin='yes'
                  ;;
               'sysmaint-autologin=no')
                  sysmaint_autologin='no'
                  ;;
               'sysmaint-session-wayland=yes')
                  sysmaint_session_wayland='yes'
                  ;;
               'sysmaint-session-wayland=no')
                  sysmaint_session_wayland='no'
                  ;;
            esac
         done < "${config_file}"
      done
   fi
   echo "INFO: account 'sysmaint' autologin: '${sysmaint_autologin}'" >&2
   echo "INFO: Wayland session: '${sysmaint_session_wayland}'" >&2
}

sysmaint_boot() {
   parse_user_sysmaint_split_config
   local mode="$1"
   case "${mode}" in
      'handle-boot') handle_boot;;
      'cleanup-autologin') restore_pre_sysmaint_autologin_config;;
      'query-sysmaint-autologin')
         trap "" EXIT
         echo "${sysmaint_autologin}"
      ;;
      *)
         echo "$0: ERROR: Invalid mode provided." >&2
         exit 1;;
   esac
}

sysmaint_boot "$@"
