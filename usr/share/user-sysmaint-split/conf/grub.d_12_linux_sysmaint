#!/bin/sh

## Copyright (C) 2024 - 2024 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

#set -x

true "user-sysmaint-split $0: START"

set -e
set -o allexport

pkg_installed() {
   local package_name dpkg_query_output
   local requested_action status error_state

   package_name="$1"
   ## Cannot use '&>' because it is a bashism.
   dpkg_query_output="$(dpkg-query --show --showformat='${Status}' "$package_name" 2>/dev/null)" || true
   ## dpkg_query_output Exampels:
   ## install ok half-configured
   ## install ok installed

   requested_action=$(echo "$dpkg_query_output" | awk '{print $1}')
   status=$(echo "$dpkg_query_output" | awk '{print $2}')
   error_state=$(echo "$dpkg_query_output" | awk '{print $3}')

   if [ "$requested_action" = 'install' ]; then
      true "grub-live $0: INFO: $package_name is installed, ok."
      return 0
   fi

   true "grub-live $0: INFO: $package_name is not installed, ok."
   return 1
}

GRUB_DEVICE="/dev/disk/by-uuid/${GRUB_DEVICE_UUID}"
unset GRUB_DEVICE_UUID

if [ -e '/etc/kicksecure_version' ]; then
   GRUB_DISTRIBUTOR="Kicksecure PERSISTENT mode SYSMAINT (For system maintenance tasks.)"
elif pkg_installed 'whonix-ws-network-conf'; then
   GRUB_DISTRIBUTOR="Whonix-Workstation (TM) PERSISTENT mode SYSMAINT (For system maintenance tasks.)"
elif pkg_installed 'whonix-gw-network-conf'; then
   GRUB_DISTRIBUTOR="Whonix-Gateway (TM) PERSISTENT mode SYSMAINT (For system maintenance tasks.)"
else
   GRUB_DISTRIBUTOR="PERSISTENT mode SYSMAINT (For system maintenance tasks.)"
fi

GRUB_DISABLE_RECOVERY="true"
GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX boot-role=sysmaint systemd.unit=sysmaint-boot.target"
GRUB_DISABLE_LINUX_UUID="true"

if test -x /etc/grub.d/10_linux ; then
	/etc/grub.d/10_linux
fi

true "user-sysmaint-split $0: OK: END"
